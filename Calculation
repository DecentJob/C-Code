#inculde<stdio.h>
#include <string.h>
menu()
{
	printf("*******************************\n");
	printf("******1.Add       2.Sub********\n");
	printf("******3.Mul       4.Div********\n");
	printf("***********0.exit**************\n");
	printf("*******************************\n");
}

int Add(int x, int y)
{
	return x + y;
}

int Sub(int x, int y)
{
	return x - y;
}

int Mul(int x, int y)
{
	return x * y;
}

int Div(int x, int y)
{
	return x / y;
}


void Calc(int (*pf)(int,int))//实现多种功能-加减乘除
{
	int x = 0;
	int y = 0;
	printf("请输入两个操作数：>");
	scanf("%d%d", &x, &y);
	printf("%d\n", pf(x, y));
}

int main()
{
	int input = 0;
	
	do
	{
		menu();
		printf("请选择：>");
		scanf("%d", &input);

		switch (input)
		{
		case 1:
			Calc(Add);
			break;
		case 2:
			Calc(Sub);
			break;
		case 3:
			Calc(Mul);
			break;
		case 4:
			Calc(Div);
			break;
		case 0:
			printf("退出\n");
			break;
		default:
			printf("选择错误\n");
			break;
		}
	} while (input);
	return 0;
}




int *cmp_int(const void* e1, const void* e2)
{
	return *(int*)e1 - *(int*)e2;
}

void test1()
{
	int arr[10] = { 9,8,7,6,5,4,3,2,1,0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	qsort(arr, sz, sizeof(arr[0]), cmp_int);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%d", arr[i]);
	}

}



int cmp_f(const void* e1, const void* e2)
{
	return ((int)(*(float*)e1 - *(float*)e2));
}

void test2()
{
	float f[] = { 9.0,8.0,7.0,6.0,5.0,4.0,3.0,2.0,1.0 };
	int sz = sizeof(f) / sizeof(f[0]);
	qsort(f, sz, sizeof(f[0]), cmp_f);
		int j = 0;
	for (j = 0; j < sz; j++)
	{
		printf("%f ", f[j]);
	}


}


struct Stu {

	char name[10];
	char age[20];
};

//int cmp_stu_by_age(const void* e1, const void* e2)
//{
//	return ((struct Stu*)e1)->age - ((struct Stu*)e2)->age;
//}

int cmp_stu_by_name(const void* e1, const void* e2)

{
	return strcmp(((struct stu*)e1)->name, ((struct stu*)e2)->name);

}

void test3()
{
	struct Stu s[3] = { {"zhangsan",20},{"lisi",30},{"wangwu",10} };
	int sz = sizeof(s) / sizeof(s[0]);
	qsort(s, sz, sizeof(s[0]), cmp_stu_by_name);
	int k = 0;
	for (k = 0; k < sz; k++)
	{
		printf("%s ", s.name);
	}
}
int main()
{
	/*test1();
	test2();*/
	test3();
	return 0;
}
